---
- hosts: centos,localhost
  remote_user: ansible
  become: yes
  become_method: sudo
  vars:
    packages:
      - httpd
      - php
      - mariadb-server
      - mariadb
    sitio: ejemplo
    server: www.ejemplo.com.uy
    hostmaster: admin@ejemplo.com.uy

  tasks:
  - name: Install LAMP software in Centos
    yum:
      name: "{{ packages }}"
      state: latest
    when: ansible_facts['distribution'] == "CentOS"   

  - name: Install Lamp software in Ubuntu
    apt:
      pkg:
      - apache2
      - php
      - mariadb-server
    when: ansible_facts['distribution'] == "Ubuntu"

  - name: Create virtualhost config directory Centos
    file:
      path: /etc/httpd/vhost.d
      state: directory
      mode: '0755'
      owner: root
    when: ansible_facts['distribution'] == "CentOS"

  - name: Add virtualhost config directory to httpd.conf
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      line: IncludeOptional vhost.d/*.conf
    when: ansible_facts['distribution'] == "CentOS"

  - name: Create virtualhost config directory Ubuntu
    file:
      path: /etc/apache2/vhost.d
      state: directory
      mode: '0755'
      owner: root
    when: ansible_facts['distribution'] == "Ubuntu"

  - name: Add virtualhost config directory to apache2.conf
    lineinfile:
      path: /etc/apache2/apache2.conf
      line: IncludeOptional vhost.d/*.conf
    when: ansible_facts['distribution'] == "Ubuntu"

  - name: Crete virtualhost content directories
    file: 
      path: "{{ item }}"
      recurse: yes
      state: directory
      owner: apache
      group: apache
      mode: '0755'
    loop:
      - /var/www/{{ sitio }}
      - /var/www/{{ sitio }}/html
      - /var/www/{{ sitio }}/cgi-bin

  - name: Create virtualhost configuration
    template:
      src: templates/{{ sitio }}.j2
      dest: /etc/httpd/vhost.d/{{ sitio }}.conf
      owner: root
      mode: '0644'
    notify: Restart httpd

  - name: Start and enable services
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - httpd
      - mariadb
    when: ansible_facts['distribution'] == "CentOS"
    loop:
      - apache2
      - mariadb
    when: ansible_facts['distribution'] == "Ubuntu"

  - name: Configure firewall Centos
    firewalld:
      service: "{{ item }}"
      state: enabled
      permanent: yes
      immediate: yes
    loop:
      - http
      - mysql
    when: ansible_facts['distribution'] == "CentOS"


  - name: Configure firewall apache Ubuntu
    ufw:
      rule: allow
      port: '80'
      proto: tcp
    when: ansible_facts['distribution'] == "Ubuntu"

  - name: Configure firewall mysql Ubuntu
    ufw:
      rule: allow
      port: '3306'
      proto: tcp
    when: ansible_facts['distribution'] == "Ubuntu"

  handlers:
  - name: Restart httpd
    service:
      name: httpd
      state: restarted
      enabled: yes
